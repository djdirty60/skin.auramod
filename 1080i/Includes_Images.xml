<?xml version="1.0" encoding="UTF-8"?>
<includes>

   <variable name="loading_widget">
       <value condition="String.IsEqual(Container(505).ListItem.Property(widgetAspect),Poster)">special://skin/media/dialogs/loading_poster.png</value>
       <value condition="!String.IsEqual(Container(505).ListItem.Property(widgetAspect),Poster)">special://skin/media/dialogs/loading_landscape.png</value>
   </variable>
   <variable name="movie_list_background">
	<value condition="String.Contains(ListItem.Label,Academy Awards Nominees)">special://skin/media/exuary/movielist/dunkirk.jpg</value>
	<value condition="String.Contains(ListItem.Label,Academy Awards Best)">special://skin/media/exuary/movielist/thegodfather.jpg</value>
	<value condition="String.Contains(ListItem.Label,Golden Globe)">special://skin//media/exuary/movielist/shapeofwater.jpg</value>
	<value condition="String.Contains(ListItem.Label,Top 250 Movies)">special://skin/media/exuary/movielist/shawshank.jpg</value>
	<value condition="String.Contains(ListItem.Label,Top 250 of 2018)">special://skin/media/exuary/movielist/thedarknight.jpg</value>
	<value condition="String.Contains(ListItem.Label,Best of 2018)">special://skin/media/exuary/movielist/blackpanther.jpg</value>
   </variable>
   <variable name="tv_list_background">
        <value condition="String.Contains(ListItem.Label,IMDB)">special://skin/media/exuary/tvlist/sopranos.jpg</value>
        <value condition="String.Contains(ListItem.Label,Rolling Stone)">special://skin/media/exuary/tvlist/bandofbrothers.jpg</value>
        <value condition="String.Contains(ListItem.Label,Popular)">special://skin/media/exuary/tvlist/breakingbad.jpg</value>
        <value condition="String.Contains(ListItem.Label,US TV)">special://skin/media/exuary/tvlist/suits.jpg</value>
        <value condition="String.Contains(ListItem.Label,UK TV)">special://skin/media/exuary/tvlist/bodyguard.jpg</value>
        <value condition="String.Contains(ListItem.Label,Genres)">special://skin/media/exuary/tvlist/genres-background.jpg</value>
   </variable> 
   <variable name="Spotlight_Fanart">
	<value condition="!String.IsEmpty(ListItem.ChannelName)">$VAR[Global_Background_Image]</value>
        <value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
        <value>$INFO[ListItem.Icon]</value>
   </variable> 
   <variable name="Image_Fanart">
        <value condition="!String.IsEmpty(ListItem.Art(landscape)) + String.IsEqual(ListItem.Art(landscape),0)">$INFO[ListItem.Art(fanart)]</value>
        <value condition="[Container.Content(episodes) | String.IsEqual(ListItem.DBType,episode)] + Skin.HasSetting(PreferFanartHome) + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="[Container.Content(episodes) | String.IsEqual(ListItem.DBType,episode)] + !Skin.HasSetting(PreferFanartHome) + !String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="!Container.Content(episodes) + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
        <value condition="!Container.Content(seasons) + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(thumb)) + !String.IsEmpty(ListItem.TvShowTitle) + Window.IsVisible(MyPlaylist.xml)">$INFO[ListItem.Art(thumb)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(animatedfanart)) + !String.IsEmpty(ListItem.Art(animatedfanart)) + ![Container.Content(videos) | Container.Content(episodes)] + !Window.IsVisible(home)">$INFO[ListItem.Art(animatedfanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(season.landscape)) + [[!Container.Content(videos) + !Container.Content(episodes)] | !String.IsEmpty(ListItem.Property(PlayAll)) | String.IsEqual(ListItem.DBType,movie)] + !Window.IsVisible(home)">$INFO[ListItem.Art(season.landscape)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.landscape)) + [[!Container.Content(videos) + !Container.Content(episodes)] | !String.IsEmpty(ListItem.Property(PlayAll)) | String.IsEqual(ListItem.DBType,movie)] + !Window.IsVisible(home)">$INFO[ListItem.Art(tvshow.landscape)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(landscape)) + [[!Container.Content(videos) + !Container.Content(episodes)] | !String.IsEmpty(ListItem.Property(PlayAll)) | String.IsEqual(ListItem.DBType,movie)] + !Window.IsVisible(home)">$INFO[ListItem.Art(landscape)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(fanart)) + [[!Container.Content(videos) + !Container.Content(episodes)] | !String.IsEmpty(ListItem.Property(PlayAll)) | String.IsEqual(ListItem.DBType,movie)] + !Window.IsVisible(home)">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(fanart)) + Window.IsVisible(home) + [String.IsEqual(ListItem.Label,ListItem.TvShowTitle) | String.IsEmpty(ListItem.TvShowTitle) | Skin.HasSetting(PreferFanartHome) | !String.IsEmpty(ListItem.Property(airday))]">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(fanart))">$INFO[ListItem.Property(fanart)]</value>
        <value condition="[!Control.HasFocus(5055) + !Control.IsVisible(505)] + !String.IsEmpty(ListItem.Thumb)">$INFO[ListItem.Thumb]</value>
        <value condition="[!Control.HasFocus(5055) + !Control.IsVisible(505)] + !String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="!Control.HasFocus(5055) + !Control.IsVisible(505)">$INFO[ListItem.Icon]</value>
    </variable>

    <variable name="Image_MainMenu_fanart"> 
	<value condition="String.Contains(ListItem.Label,Shows)">special://skin/extras/backgrounds/tv-shows-mainmenu-bg.jpg</value>	
	<value condition="String.Contains(ListItem.Label,Movies)">special://skin/extras/backgrounds/movies-mainmenu-bg.jpg</value>	
	<value condition="String.Contains(ListItem.Label,Add-ons)">special://skin/extras/backgrounds/addons-mainmenu-bg.jpg</value>	
	<value condition="String.Contains(ListItem.Label,live)">special://skin/extras/backgrounds/live-tv-mainmenu-bg.jpg</value>	
        <value condition="String.Contains(Container(300).ListItem.Label,Shows)">special://skin/extras/backgrounds/tv-shows-mainmenu-bg.jpg</value>
        <value condition="String.Contains(Container(300).ListItem.Label,Movies)">special://skin/extras/backgrounds/movies-mainmenu-bg.jpg</value>
        <value condition="String.Contains(Container(300).ListItem.Label,Add-ons)">special://skin/extras/backgrounds/addons-mainmenu-bg.jpg</value>
        <value condition="String.Contains(Container(300).ListItem.Label,live)">special://skin/extras/backgrounds/live-tv-mainmenu-bg.jpg</value>
	<value condition="Window.IsVisible(Custom_Hub_TVNetflix.xml)">special://skin/extras/backgrounds/tv-shows-mainmenu-bg.jpg</value>
	<value condition="Window.IsVisible(Custom_Hub_MovieNetflix.xml)">special://skin/extras/backgrounds/movies-mainmenu-bg.jpg</value>
	<value condition="Window.IsVisible(MyVideoNav.xml) + !String.IsEmpty(Container(505).ListItem.Art(fanart))">$INFO[Container(505).ListItem.Art(fanart)]</value>
	<value>special://skin/extras/backgrounds/tv-shows-mainmenu-bg.jpg</value>
<!--	<value>$VAR[Global_Background_Image_Var]</value> -->
    </variable>
    <variable name="Image_OSD_Artwork">
        <value condition="!String.IsEmpty(Player.Art(tvshow.poster))">$INFO[Player.Art(tvshow.poster)]</value>
        <value condition="!String.IsEmpty(Player.Art(poster))">$INFO[Player.Art(poster)]</value>
        <value>$INFO[VideoPlayer.Cover]</value>
    </variable>

    <variable name="Image_ArtistFanartVis">
        <value condition="!Skin.HasSetting(ArtistSlideShow.Disabled) + !String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.ExtraFanArt))">$INFO[Window(Home).Property(SkinHelper.Player.Art.ExtraFanArt)]</value>
        <value condition="System.HasAddon(script.artistslideshow) + !Skin.HasSetting(ArtistSlideShow.Disabled) + !String.IsEmpty(Window(Visualisation).Property(ArtistSlideshow))">$INFO[Window(Visualisation).Property(ArtistSlideshow)]</value>
        <value condition="[!System.HasAddon(script.artistslideshow) | Skin.HasSetting(ArtistSlideShow.Disabled)] + Skin.HasSetting(musicvis.fanartfallback) + !String.IsEmpty(Player.Art(fanart))">$INFO[Player.Art(fanart)]</value>
        <value>common/null.png</value>
    </variable>

    <variable name="Image_AutoUpdate">
        <value condition="String.Contains(Control.GetLabel(13),*)">special://skin/extras/icons/antenna-on.png</value>
        <value>special://skin/extras/icons/antenna.png</value>
    </variable>

    <variable name="Image_HDSD">
        <value condition="String.IsEqual(ListItem.VideoResolution,4K) | Integer.IsEqual(ListItem.VideoResolution,2160)">flags/4k.png</value>
        <value condition="Integer.IsGreater(ListItem.VideoResolution,719)">flags/hd.png</value>
        <value condition="!String.IsEmpty(ListItem.VideoResolution)">flags/sd.png</value>
        <value condition="ListItem.IsCollection">flags/sets.png</value>
        <value>flags/web.png</value>
    </variable>

    <variable name="Image_OSD_HDSD">
        <value condition="String.IsEqual(VideoPlayer.VideoResolution,4K) | Integer.IsEqual(VideoPlayer.VideoResolution,2160)">flags/4k.png</value>
        <value condition="Integer.IsGreater(VideoPlayer.VideoResolution,719)">flags/hd.png</value>
        <value condition="!String.IsEmpty(VideoPlayer.VideoResolution)">flags/sd.png</value>
        <value condition="VideoPlayer.IsCollection">flags/sets.png</value>
        <value>flags/web.png</value>
    </variable>

    <variable name="Image_AddonImage">
        <value condition="!String.IsEmpty(Container.PluginName) + !String.EndsWith(ListItem.Icon,icon.png)">special://home/addons/$INFO[Container.PluginName]/icon.png</value>
        <value condition="String.EndsWith(ListItem.Icon,icon.png)">$INFO[ListItem.Icon]</value>
    </variable>

    <variable name="Image_Player_Clearart">
        <value condition="!Skin.HasSetting(ShowOSDClearLogo) + !String.IsEmpty(Player.Art(tvshow.clearart))">$INFO[Player.Art(tvshow.clearart)]</value>
        <value condition="!Skin.HasSetting(ShowOSDClearLogo) + !String.IsEmpty(Player.Art(clearart))">$INFO[Player.Art(clearart)]</value>
        <value condition="!String.IsEmpty(Player.Art(tvshow.clearlogo))">$INFO[Player.Art(tvshow.clearlogo)]</value>
        <value condition="!String.IsEmpty(Player.Art(clearlogo))">$INFO[Player.Art(clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
    </variable>

    <variable name="Image_ClearLogo">
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
    </variable>
    <variable name="Widget_ClearLogo">
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
    </variable>

    <variable name="NetflixHome_ClearLogo">
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo)) + !String.IsEqual(ListItem.Art(tvshow.clearlogo),0)">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(clearlogo)) + !String.IsEqual(ListItem.Art(clearlogo),0)">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.ClearLogo))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.ClearLogo)]</value>
    </variable>

    <variable name="Image_DiscArt">
        <value condition="!String.IsEmpty(ListItem.Art(discart))">$INFO[ListItem.Art(discart)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.DiscArt))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.DiscArt)]</value>
    </variable>

    <variable name="Image_Watched">
        <value condition="System.Setting(hidewatched)">special://skin/extras/icons/watched-hide.png</value>
        <value>special://skin/extras/icons/watched-show.png</value>
    </variable>
    <variable name="Image_Filtered">
        <value condition="Container.Filtered">special://skin/extras/icons/filter-on.png</value>
        <value>special://skin/extras/icons/filter-off.png</value>
    </variable>

    <variable name="Cat_GenreIcons">
        <value>$VAR[Cat_GenreIcons_Path]$INFO[ListItem.Label,,.jpg]</value>
        <value>$VAR[Cat_GenreIcons_Path]$INFO[ListItem.Label,,.png]</value>
    </variable>
    <variable name="Cat_GenreIcons_Path">
        <value condition="System.HasAddon(resource.images.moviegenreicons.filmstrip)">resource://resource.images.moviegenreicons.filmstrip/</value>
        <value condition="System.HasAddon(resource.images.moviegenreicons.transparent)">resource://resource.images.moviegenreicons.transparent/</value>
        <value condition="System.HasAddon(resource.images.moviegenreicons.filmstrip)">resource://resource.images.moviegenreicons.xzener-flat/</value>
        <value condition="System.HasAddon(resource.images.moviegenreicons.horizon)">resource://resource.images.moviegenreicons.horizon/</value>
        <value condition="System.HasAddon(resource.images.moviegenreicons.grey)">resource://resource.images.moviegenreicons.grey/</value>
    </variable>
    <variable name="Image_GenreIcons">
        <value>$VAR[Image_GenreIcons_Path]$INFO[ListItem.Label,,.png]</value>
    </variable>
    <variable name="Image_GenreIcons_Path">
        <value condition="System.HasAddon(resource.images.moviegenreicons.transparent)">resource://resource.images.moviegenreicons.transparent/</value>
        <value condition="System.HasAddon(resource.images.moviegenreicons.horizon)">resource://resource.images.moviegenreicons.horizon/</value>
    </variable>

    <variable name="Image_FallbackIcon">
        <value condition="String.Contains(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
        <value condition="String.Contains(ListItem.ActualIcon,Default)">$INFO[ListItem.ActualIcon]</value>
    </variable>

    <variable name="Image_Overlay_List">
        <value condition="ListItem.IsPlaying">indicator/play.png</value>
        <value condition="ListItem.IsResumable + Integer.IsGreater(ListItem.PercentPlayed,66)">indicator/inprogress-75.png</value>
        <value condition="ListItem.IsResumable + Integer.IsGreater(ListItem.PercentPlayed,33)">indicator/inprogress-50.png</value>
        <value condition="Integer.IsGreater(ListItem.PlayCount,0)">indicator/checkmark-fo.png</value>
        <value condition="ListItem.IsResumable">indicator/inprogress-25.png</value>
        <value condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png)">indicator/checkmark-fo.png</value>
        <value condition="[Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-VideoList.xml)]+ !String.IsEmpty(ListItem.DBID)">indicator/library.png</value>
        <value condition="ListItem.IsCollection">indicator/movieset.png</value>
        <value condition="String.IsEqual(ListItem.Overlay,OverlayUnwatched.png)">indicator/library.png</value>
    </variable>

    <variable name="Image_Overlay">
        <value condition="ListItem.IsPlaying">indicator/play.png</value>
        <value condition="ListItem.IsResumable + Integer.IsGreater(ListItem.PercentPlayed,66)">indicator/inprogress-75.png</value>
        <value condition="ListItem.IsResumable + Integer.IsGreater(ListItem.PercentPlayed,33)">indicator/inprogress-50.png</value>
        <value condition="ListItem.IsResumable">indicator/inprogress-25.png</value>
        <value condition="Integer.IsGreater(ListItem.Property(TotalEpisodes),0) + Integer.IsLess(ListItem.Property(UnWatchedEpisodes),1) + [Container.Content(tvshows) | Container.Content(seasons)]">indicator/checkmark-fo.png</value>
        <value condition="Integer.IsGreater(ListItem.PlayCount,0)">indicator/checkmark-fo.png</value>
        <value condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png)">indicator/checkmark.png</value>
        <value condition="[Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-VideoList.xml)]+ !String.IsEmpty(ListItem.DBID)">indicator/library.png</value>
        <value condition="ListItem.IsCollection">indicator/movieset.png</value>
    </variable>
    <variable name="Image_Overlay_Focus">
        <value condition="ListItem.IsPlaying">indicator/play.png</value>
        <value condition="ListItem.IsResumable + Integer.IsGreater(ListItem.PercentPlayed,66)">indicator/inprogress-75.png</value>
        <value condition="ListItem.IsResumable + Integer.IsGreater(ListItem.PercentPlayed,33)">indicator/inprogress-50.png</value>
        <value condition="ListItem.IsResumable">indicator/inprogress-25.png</value>
        <value condition="Integer.IsGreater(ListItem.Property(TotalEpisodes),0) + Integer.IsLess(ListItem.Property(UnWatchedEpisodes),1) + [Container.Content(tvshows) | Container.Content(seasons)]">indicator/checkmark-fo.png</value>
        <value condition="Integer.IsGreater(ListItem.PlayCount,0)">indicator/checkmark-fo.png</value>
        <value condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png)">indicator/checkmark-fo.png</value>
        <value condition="[Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-VideoList.xml)]+ !String.IsEmpty(ListItem.DBID)">indicator/library.png</value>
        <value condition="ListItem.IsCollection">indicator/movieset.png</value>
    </variable>
    <variable name="Image_Overlay_Corner">
        <value condition="ListItem.IsPlaying">indicator/corner.png</value>
        <value condition="ListItem.IsResumable">indicator/corner.png</value>
        <value condition="Integer.IsGreater(ListItem.PlayCount,0)">indicator/corner.png</value>
        <value condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png)">indicator/corner.png</value>
        <value condition="ListItem.IsCollection">indicator/corner.png</value>
        <value condition="Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + [Container.Content(tvshows) | Container.Content(seasons) | Window.IsVisible(Home)]">indicator/corner.png</value>
        <value condition="Integer.IsGreater(ListItem.Property(TotalEpisodes),0) + Integer.IsLess(ListItem.Property(UnWatchedEpisodes),1) + [Container.Content(tvshows) | Container.Content(seasons)]">indicator/corner.png</value>
    </variable>

    <variable name="Image_Poster">
        <value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(ListItem.Art(animatedposter))">$INFO[ListItem.Art(animatedposter)]</value>
        <!-- <value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.AnimatedPoster))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.AnimatedPoster)]</value> -->
        <value condition="[Container.Content(seasons) | Container.Content(episodes)] + !String.IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
        <value condition="Container.Content(seasons) + !String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>

    <variable name="Image_Poster_Color">
        <value condition="Skin.HasSetting(CycleColors) + !Skin.HasSetting(MatchColors)">special://skin/extras/colorspin/</value>
        <value condition="[Container.Content(seasons) | Container.Content(episodes)] + !String.IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
        <value condition="Container.Content(seasons) + !String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Poster))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Poster)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.AlbumThumb))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.AlbumThumb)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.ArtistThumb))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.ArtistThumb)]</value>
        <value condition="!String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
        <value condition="Skin.HasSetting(CycleColors)">special://skin/extras/colorspin/</value>
    </variable>

    <variable name="Image_Banner">
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.banner))">$INFO[ListItem.Art(tvshow.banner)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>

   <variable name="fanart_webservice">
	<value condition="[String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,episode)] | [Container.Content(tvshows) | Container.Content(episodes) | Container.Content(seasons)]">http://localhost:52307/getpvrthumb&amp;title=$ESCINFO[ListItem.TvShowTitle]&amp;type=fanart&amp;mediatype=tvshow&amp;year=$INFO[ListItem.Year]</value>
	<value condition="String.IsEqual(ListItem.DBType,movie)">http://localhost:52307/getpvrthumb&amp;title=$ESCINFO[ListItem.Title]&amp;type=fanart&amp;mediatype=movie&amp;year=$INFO[ListItem.Year]</value>
	</variable>

   <variable name="clearlogo_webservice">
       <value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,episode)">http://localhost:52307/getpvrthumb&amp;title=$ESCINFO[ListItem.TvShowTitle]&amp;type=clearlogo&amp;mediatype=tvshow&amp;year=$INFO[ListItem.Year]</value>
        <value condition="String.IsEqual(ListItem.DBType,movie)">http://localhost:52307/getpvrthumb&amp;title=$ESCINFO[ListItem.Title]&amp;type=clearlogo&amp;mediatype=movie&amp;year=$INFO[ListItem.Year]</value>
        </variable>

   <variable name="landscape_webservice">
        <value condition="String.Contains(ListItem.Path,videodb://) + !String.IsEmpty(ListItem.Art(Landscape))">$INFO[ListItem.Art(Landscape)]</value>
        <value condition="String.Contains(ListItem.Path,videodb://) + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,episode)">http://localhost:52307/getpvrthumb&amp;title=$ESCINFO[ListItem.TvShowTitle]&amp;type=landscape&amp;mediatype=tvshow&amp;year=$INFO[ListItem.Year]</value>
        <value condition="String.IsEqual(ListItem.DBType,movie)">http://localhost:52307/getpvrthumb&amp;title=$ESCINFO[ListItem.Title]&amp;type=landscape&amp;mediatype=movie&amp;year=$INFO[ListItem.Year]</value>
        <value condition="!String.IsEmpty(ListItem.Property(fanart))">$INFO[ListItem.Property(fanart)]</value>
	<value condition="!String.IsEmpty(ListItem.Art(Landscape))">$INFO[ListItem.Art(Landscape)]</value>
	<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value>$INFO[ListItem.Icon]</value>
        </variable>

   <variable name="category_widget">
  	<value condition="String.Contains(ListItem.FolderPath,Genres)">$VAR[Cat_GenreIcons]</value> 
	<value>special://skin/extras/backgrounds/global_blue.jpg</value>
  </variable>

</includes>
